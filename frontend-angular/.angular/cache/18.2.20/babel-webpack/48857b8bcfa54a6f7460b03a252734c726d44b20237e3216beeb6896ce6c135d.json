{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/feed.service\";\nimport * as i2 from \"@angular/common\";\nfunction FeedComponent_div_0_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\", 5);\n    i0.ɵɵlistener(\"click\", function FeedComponent_div_0_p_4_Template_p_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const entry_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(entry_r2.expanded = true);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(2, 1, ctx_r3.stripHtml(entry_r2.description).split(\"\\n\")[0], 0, 200), \"... \");\n  }\n}\nfunction FeedComponent_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 6);\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", entry_r2.description, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction FeedComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\")(2, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function FeedComponent_div_0_Template_a_click_2_listener() {\n      const entry_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      return i0.ɵɵresetView(entry_r2.visited = true);\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, FeedComponent_div_0_p_4_Template, 3, 5, \"p\", 3)(5, FeedComponent_div_0_div_5_Template, 1, 1, \"div\", 4);\n    i0.ɵɵelementStart(6, \"small\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    i0.ɵɵclassProp(\"visited\", entry_r2.visited);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", entry_r2.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", entry_r2.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !entry_r2.expanded);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", entry_r2.expanded);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r2.pubDate);\n  }\n}\nexport let FeedComponent = /*#__PURE__*/(() => {\n  class FeedComponent {\n    constructor(feedService) {\n      this.feedService = feedService;\n      this.entries = [];\n    }\n    ngOnInit() {\n      this.feedService.getFeedEntries().subscribe(data => {\n        this.entries = data.map(entry => ({\n          ...entry,\n          visited: false,\n          expanded: false\n        })).sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n      });\n    }\n    toggleContent(entry) {\n      entry.expanded = !entry.expanded;\n    }\n    markAsVisited(entry) {\n      entry.visited = true;\n    }\n    static {\n      this.ɵfac = function FeedComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FeedComponent)(i0.ɵɵdirectiveInject(i1.FeedService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FeedComponent,\n        selectors: [[\"app-feed\"]],\n        decls: 1,\n        vars: 1,\n        consts: [[\"class\", \"feed-entry\", 3, \"visited\", 4, \"ngFor\", \"ngForOf\"], [1, \"feed-entry\"], [\"target\", \"_blank\", 3, \"click\", \"href\"], [\"style\", \"cursor: pointer;\", 3, \"click\", 4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [3, \"innerHTML\"]],\n        template: function FeedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, FeedComponent_div_0_Template, 9, 7, \"div\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.entries);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i2.SlicePipe],\n        styles: [\".feed-entry[_ngcontent-%COMP%]{border-bottom:1px solid #ccc;padding:1rem;cursor:pointer}.feed-entry.visited[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:gray;text-decoration:line-through}.entry-body[_ngcontent-%COMP%]{display:flex;gap:1rem}.entry-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-height:150px;object-fit:cover}\"]\n      });\n    }\n  }\n  return FeedComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}