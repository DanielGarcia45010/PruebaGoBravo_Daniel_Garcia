{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/feed.service\";\nimport * as i2 from \"@angular/common\";\nfunction FeedComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"img\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", entry_r2.image, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction FeedComponent_div_1_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(entry_r2.contentSnippet);\n  }\n}\nfunction FeedComponent_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"innerHTML\", entry_r2.content, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction FeedComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function FeedComponent_div_1_Template_div_click_1_listener() {\n      const entry_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleEntry(entry_r2));\n    });\n    i0.ɵɵtemplate(2, FeedComponent_div_1_div_2_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function FeedComponent_div_1_Template_a_click_4_listener() {\n      const entry_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.markAsVisited(entry_r2));\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FeedComponent_div_1_p_6_Template, 2, 1, \"p\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, FeedComponent_div_1_div_7_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    i0.ɵɵclassProp(\"visited\", entry_r2.visited);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", entry_r2.image);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", entry_r2.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", entry_r2.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", entry_r2.contentSnippet);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", entry_r2.expanded);\n  }\n}\nexport let FeedComponent = /*#__PURE__*/(() => {\n  class FeedComponent {\n    constructor(feedService) {\n      this.feedService = feedService;\n      this.entries = [];\n    }\n    ngOnInit() {\n      this.feedService.getFeedEntries().subscribe(data => {\n        this.entries = data.map(entry => {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(entry.description || '', 'text/html');\n          const text = doc.body.textContent || '';\n          // Buscar contenido visible y eliminar etiquetas técnicas\n          const cleanedText = text.replace(/Article URL:.*/gi, '').replace(/Comments URL:.*/gi, '').replace(/Points:.*/gi, '').replace(/# Comments:.*/gi, '').trim();\n          // Si el texto limpio es muy corto, usar comentarios o fecha\n          let summary = cleanedText.length > 40 ? cleanedText.slice(0, 200) : '';\n          if (!summary) {\n            const commentsMatch = text.match(/# Comments: \\d+/i);\n            const comments = commentsMatch ? commentsMatch[0] : '';\n            summary = `${comments} · ${entry.pubDate}`;\n          }\n          const imgEl = doc.querySelector('img');\n          const image = imgEl ? imgEl.src : null;\n          return {\n            ...entry,\n            summary,\n            cleanedDescription: cleanedText,\n            image,\n            visited: false,\n            expanded: false\n          };\n        }).sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n      });\n    }\n    static {\n      this.ɵfac = function FeedComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FeedComponent)(i0.ɵɵdirectiveInject(i1.FeedService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FeedComponent,\n        selectors: [[\"app-feed\"]],\n        decls: 2,\n        vars: 1,\n        consts: [[1, \"feed-container\"], [\"class\", \"feed-entry\", 3, \"visited\", 4, \"ngFor\", \"ngForOf\"], [1, \"feed-entry\"], [1, \"entry-header\", 3, \"click\"], [\"class\", \"entry-image\", 4, \"ngIf\"], [1, \"entry-text\"], [\"target\", \"_blank\", 1, \"entry-title\", 3, \"click\", \"href\"], [\"class\", \"entry-snippet\", 4, \"ngIf\"], [\"class\", \"entry-content\", 4, \"ngIf\"], [1, \"entry-image\"], [\"alt\", \"Image\", 3, \"src\"], [1, \"entry-snippet\"], [1, \"entry-content\"], [3, \"innerHTML\"]],\n        template: function FeedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, FeedComponent_div_1_Template, 8, 7, \"div\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.entries);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf],\n        styles: [\".feed-container[_ngcontent-%COMP%]{padding:20px;max-width:800px;margin:auto;font-family:Segoe UI,sans-serif}.entry[_ngcontent-%COMP%]{border-bottom:1px solid #ddd;padding:15px 0;cursor:pointer;transition:background-color .3s ease}.entry[_ngcontent-%COMP%]:hover{background-color:#f9f9f9}.entry[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#007acc;text-decoration:none;font-size:20px}.entry[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]   a.visited[_ngcontent-%COMP%]{color:gray;text-decoration:line-through}.entry-content[_ngcontent-%COMP%]{display:flex;gap:15px;align-items:flex-start}.entry-image[_ngcontent-%COMP%]{max-height:150px;border-radius:5px}.entry-summary[_ngcontent-%COMP%]{flex:1;font-size:15px;line-height:1.4}.entry-full[_ngcontent-%COMP%]{margin-top:10px;background:#f0f0f0;padding:10px;border-radius:4px;font-size:14px}\"]\n      });\n    }\n  }\n  return FeedComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}