{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/feed.service\";\nexport let FeedComponent = /*#__PURE__*/(() => {\n  class FeedComponent {\n    constructor(feedService) {\n      this.feedService = feedService;\n      this.entries = [];\n      this.filteredEntries = [];\n      this.searchTerm = '';\n    }\n    ngOnInit() {\n      this.feedService.getFeedEntries().subscribe(data => {\n        this.entries = data.map(entry => {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(entry.description || '', 'text/html');\n          const text = doc.body.textContent || '';\n          const cleanedText = text.replace(/Article URL:.*/gi, '').replace(/Comments URL:.*/gi, '').replace(/Points:.*/gi, '').replace(/# Comments:.*/gi, '').trim();\n          let summary = cleanedText.length > 40 ? cleanedText.slice(0, 200) : '';\n          if (!summary) {\n            const commentsMatch = text.match(/# Comments: \\d+/i);\n            const comments = commentsMatch ? commentsMatch[0] : '';\n            summary = `${comments} · ${entry.pubDate}`;\n          }\n          const imgEl = doc.querySelector('img');\n          const image = imgEl ? imgEl.src : null;\n          return {\n            ...entry,\n            summary,\n            cleanedDescription: cleanedText,\n            image,\n            visited: false,\n            expanded: false\n          };\n        }).sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n        this.filteredEntries = this.entries;\n      });\n    }\n    onSearch() {\n      const term = this.searchTerm.toLowerCase();\n      this.filteredEntries = this.entries.filter(entry => entry.title.toLowerCase().includes(term));\n    }\n    static {\n      this.ɵfac = function FeedComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FeedComponent)(i0.ɵɵdirectiveInject(i1.FeedService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FeedComponent,\n        selectors: [[\"app-feed\"]],\n        decls: 0,\n        vars: 0,\n        template: function FeedComponent_Template(rf, ctx) {},\n        styles: [\".feed-container[_ngcontent-%COMP%]{max-width:800px;margin:30px auto;padding:0 20px}.entry[_ngcontent-%COMP%]{background-color:#b272d9;color:#fff;border-radius:12px;padding:20px;margin-bottom:20px;box-shadow:0 2px 10px #0003;transition:transform .2s;cursor:pointer}.entry[_ngcontent-%COMP%]:hover{transform:scale(1.01)}.entry[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-top:0;display:flex;align-items:center;justify-content:space-between;font-size:18px}.entry[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;color:#fff;transition:color .2s}.entry[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#eee}.entry[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]   a.visited[_ngcontent-%COMP%]{color:#ccc}.visited-label[_ngcontent-%COMP%]{font-size:12px;background-color:#fff;color:#b272d9;border-radius:6px;padding:4px 8px;margin-left:10px}.entry-summary[_ngcontent-%COMP%], .entry-full[_ngcontent-%COMP%], .entry-date[_ngcontent-%COMP%]{font-size:16px;margin-top:10px;color:#f0f0f0}.entry-image[_ngcontent-%COMP%]{width:150px;height:auto;max-height:150px;object-fit:cover;border-radius:8px;margin:10px 0}\"]\n      });\n    }\n  }\n  return FeedComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}