{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/feed.service\";\nimport * as i2 from \"@angular/common\";\nfunction FeedComponent_div_0_div_1_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 8);\n  }\n  if (rf & 2) {\n    const entry_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", entry_r1.image, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction FeedComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, FeedComponent_div_0_div_1_img_3_Template, 1, 1, \"img\", 5);\n    i0.ɵɵelement(4, \"p\", 6);\n    i0.ɵɵelementStart(5, \"small\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"a\", 7);\n    i0.ɵɵtext(9, \"Leer m\\u00E1s\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r1.title);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", entry_r1.image);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"innerHTML\", entry_r1.description, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(entry_r1.pubDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", entry_r1.link, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction FeedComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, FeedComponent_div_0_div_1_Template, 10, 5, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.entries);\n  }\n}\nfunction FeedComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Cargando entradas...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let FeedComponent = /*#__PURE__*/(() => {\n  class FeedComponent {\n    constructor(feedService) {\n      this.feedService = feedService;\n      this.entries = [];\n      this.expandedEntry = null;\n      this.visitedLinks = new Set();\n    }\n    ngOnInit() {\n      this.feedService.getFeedEntries().subscribe(data => {\n        this.entries = data.sort((a, b) => new Date(b.pubDate).getTime() - new Date(a.pubDate).getTime());\n      });\n    }\n    toggleContent(entry) {\n      this.expandedEntry = this.expandedEntry === entry ? null : entry;\n    }\n    markAsVisited(link) {\n      this.visitedLinks.add(link);\n    }\n    isVisited(link) {\n      return this.visitedLinks.has(link);\n    }\n    static {\n      this.ɵfac = function FeedComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FeedComponent)(i0.ɵɵdirectiveInject(i1.FeedService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FeedComponent,\n        selectors: [[\"app-feed\"]],\n        decls: 3,\n        vars: 2,\n        consts: [[\"loading\", \"\"], [\"class\", \"feed-container\", 4, \"ngIf\", \"ngIfElse\"], [1, \"feed-container\"], [\"class\", \"feed-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"feed-card\"], [\"alt\", \"Feed image\", 3, \"src\", 4, \"ngIf\"], [3, \"innerHTML\"], [\"target\", \"_blank\", 3, \"href\"], [\"alt\", \"Feed image\", 3, \"src\"]],\n        template: function FeedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, FeedComponent_div_0_Template, 2, 1, \"div\", 1)(1, FeedComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          }\n          if (rf & 2) {\n            const loading_r3 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.entries.length > 0)(\"ngIfElse\", loading_r3);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf]\n      });\n    }\n  }\n  return FeedComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}